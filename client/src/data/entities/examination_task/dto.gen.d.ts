import { type JSONData } from '../../base_classes/dto.d'
import type IDto from '../../base_classes/dto.d'

/// ///////////////////////////////////////////////////////////////////////////////////////////////////
/// WARNING! THIS FILE IS AUTOMATICALLY GENERATED, ANY CHANGES WILL BE LOST ON NEXT GENERATION
/// ///////////////////////////////////////////////////////////////////////////////////////////////////


// Types
export type ExaminationTaskRole = "admin" | "controller" | "observer"
export type ExaminationTaskAction = "created" | "updated" | "observed" | "solved" | "approved" | "archived"
export type AcceptanceRegionType = "range" | "percentage"
export type ExaminationTaskStatus = "concept" | "pending" | "failed" | "success" | "done" | "archived"

// Interfaces
export interface IChangeLog {
    // The action of the change log entry
      action: ExaminationTaskAction
    // The status of the change log entry
      status: string
    // The timestamp of the change log entry
      timestamp: string
    // The user of the change log entry
    user: {
    // The email of the user
      email: string
    // The ID of the user
      id: string
    }
}
export interface IProperties {
    // The acceptance region of the property
    acceptanceRegion: {
    // The maximum value of the acceptance region
      max: number
    // The minimum value of the acceptance region
      min: number
    // Whether the acceptance region is symmetric
      symmetric: boolean
    // The type of the acceptance region
      type: AcceptanceRegionType
    // The value of the acceptance region
      value: number
    }
    // The description of the property
      description: string
    // The expected value of the property
      expectedValue: string
    // The input type of the property
      inputType: string
    // The instructions of the property
      instructions: string
    // The key of the property
      key: string
    // The lower bound of the property
      lowerBound: number
    // The name of the property
      name: string
    // Whether the property is product specific
      productSpecific: boolean
    // Whether the property is required
      required: boolean
    // The type of the property
      type: string
    // The unit type of the property
      unitType: string
    // The upper bound of the property
      upperBound: number
}

// Data Transfer Object Interface
export interface IExaminationTaskDto extends IDto {
  /// ///////////////////////////////////////
  /// //////// PRIVATE VARIABLES ////////////
  /// ///////////////////////////////////////
  /**
   * The path to the corresponding API endpoint with variables marked as {?}
   */
  _path: string

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////

    // Whether the task is approved
    approved: boolean

    // The person assigned to the task
    assignedTo: ExaminationTaskRole

    // The change log entries for the task
    changeLog: IChangeLog[]

    // The kind of the object
    kind: string

    // The observations for the task
    observations: Record<string, any>

    // The ID of the product
    productId: string

    // The name of the product
    productName: string

    // The properties of the task
    properties: IProperties[]

    // The SKU of the product
    sku: string

    // The status of the task
    status: ExaminationTaskStatus

    // The ordering of the status
    statusIndex: number

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////

  /**
   * Set the ExaminationTask's properties
   */
  set: (data: JSONData) => void
}
