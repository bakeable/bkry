package entities

var attributeFields = []FieldConfig{
	{
		FieldName: "Kind",
		FieldType: "string",
		JsonName: "_kind",
		Description: "The kind of the object",
		DefaultValue: "Attribute",
	},
	{
		FieldName: "Description",
		FieldType: "string",
		JsonName: "description",
		Description: "A description of the attribute",
		DefaultValue: "",
	},
	{
		FieldName: "Type",
		FieldType: "AttributeType",
		JsonName: "type",
		IsEnum: true,
		EnumValues: []string{"text","key_value","number","range","units","optional"},
		DefaultValue: "text",
	},
	{
		FieldName: "Default",
		FieldType: "bool",
		JsonName: "default",
		Description: "Whether an attribute is selected by default",
		DefaultValue: "true",
	},
	{
		FieldName: "DefaultOptions",
		FieldType: "DefaultOption",
		JsonName: "defaultOptions",
		Description: "The default options for this attribute",
		IsArray: true,
		IsChildStruct: true,
		Fields: []FieldConfig{
			{
				FieldName: "ID",
				FieldType: "string",
				JsonName: "id",
				Description: "Unique identifier for the option",
				DefaultValue: "",
			},
			{
				FieldName: "Key",
				FieldType: "string",
				JsonName: "key",
				Description: "The option's key",
				DefaultValue: "",
			},
			{
				FieldName: "Min",
				FieldType: "float64",
				JsonName: "min",
				Description: "The minimum value for the option",
				DefaultValue: "0",
			},
			{
				FieldName: "Max",
				FieldType: "float64",
				JsonName: "max",
				Description: "The maximum value for the option",
				DefaultValue: "0",
			},
			{
				FieldName: "Value",
				FieldType: "string",
				JsonName: "value",
				Description: "The option's value",
				DefaultValue: "",
			},
		},
	},
	{
		FieldName: "IncrementalPricing",
		FieldType: "AttributeIncrementalPricing",
		JsonName: "incrementalPricing",
		Description: "Whether graduated pricing applies",
		IsEnum: true,
		EnumValues: []string{"staggered","standard"},
		DefaultValue: "standard",
	},
	{
		FieldName: "MaxOptionID",
		FieldType: "int",
		JsonName: "maxOptionId",
		Description: "The maximum option ID",
	},
	{
		FieldName: "Key",
		FieldType: "string",
		JsonName: "key",
		Description: "The attribute's key",
		DefaultValue: "",
	},
	{
		FieldName: "Name",
		FieldType: "string",
		JsonName: "name",
		Description: "The attribute's name",
		DefaultValue: "",
	},
	{
		FieldName: "Optional",
		FieldType: "bool",
		JsonName: "optional",
		Description: "Whether the attribute is optional",
		DefaultValue: "false",
	},
	{
		FieldName: "Included",
		FieldType: "bool",
		JsonName: "included",
		Description: "Whether the attribute is included",
		DefaultValue: "false",
	},
	{
		FieldName: "OptionSets",
		FieldType: "attribute_option_set.AttributeOptionSet",
		JsonName: "optionSets",
		Description: "The attribute's option sets",
		IsArray: true,
		DefaultValue: "[]attribute_option_set.AttributeOptionSet{}",
	},
	{
		FieldName: "Options",
		FieldType: "attribute_option.AttributeOption",
		JsonName: "options",
		Description: "All options within the attribute",
		IsArray: true,
		FieldTypeIsExternal: true,
		DefaultValue: "[]attribute_option.AttributeOption",
	},
	{
		FieldName: "Order",
		FieldType: "int",
		JsonName: "order",
		Description: "A numerical representation of the order in which the attribute should be displayed",
		DefaultValue: "0",
	},
	{
		FieldName: "Prefix",
		FieldType: "string",
		JsonName: "prefix",
		Description: "The attribute's prefix",
		DefaultValue: "",
	},
	{
		FieldName: "PriceTypes",
		FieldType: "AttributePriceType",
		JsonName: "priceTypes",
		Description: "The associated price types",
		IsEnum: true,
		IsArray: true,
		EnumValues: []string{"variable", "fixed"},
		DefaultValue: "variable",
	},
	{
		FieldName: "Nid",
		FieldType: "int",
		JsonName: "nid",
		Description: "The attribute's numerical identifier",
		DefaultValue: "0",
	},
	{
		FieldName: "Surcharges",
		FieldType: "map[string]interface{}",
		JsonName: "surcharges",
		Description: "The attribute's surcharges",
		DefaultValue: "map[string]interface{}{}",
	},
}
