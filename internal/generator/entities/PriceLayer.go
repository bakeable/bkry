package entities

var priceLayerFields = []FieldConfig{
	{
		FieldName: "Kind",
		FieldType: "string",
		JsonName: "_kind",
		Description: "The kind of the object",
		DefaultValue: "PriceLayer",
	},
	{
		FieldName: "Attributes",
		FieldType: "string",
		JsonName: "attributes",
		IsArray: true,
		Description: "The attributes associated with the variable price",
		
	},
	{
		FieldName: "Description",
		FieldType: "string",
		JsonName: "description",
		Description: "The description of the price layer",
		DefaultValue: "",
	},
	{
		FieldName: "External",
		FieldType: "bool",
		JsonName: "external",
		Description: "Whether the price layer is external",
		DefaultValue: "false",
	},
	{
		FieldName: "IncrementalPricing",
		FieldType: "AttributeIncrementalPricing",
		JsonName: "incrementalPricing",
		Description: "The type of incremental pricing of the price layer",
		IsEnum: true,
		EnumValues: []string{"staggered","standard"},
		DefaultValue: "standard",
	},
	{
		FieldName: "IncludeInMarginCalculation",
		FieldType: "bool",
		JsonName: "includeInMarginCalculation",
		Description: "Whether the price layer should be included in the margin calculation",
	},
	{
		FieldName: "IncludeInPurchasePrice",
		FieldType: "bool",
		JsonName: "includeInPurchasePrice",
		Description: "Whether the price layer should be included in the purchase price",
	},
	{
		FieldName: "Template",
		FieldType: "string",
		JsonName: "template",
		Description: "The template of the price layer",
		DefaultValue: "",
	},
	{
		FieldName: "Name",
		FieldType: "string",
		JsonName: "name",
		Description: "The name of the price layer",
		DefaultValue: "",
	},
	{
		FieldName: "Options",
		FieldType: "string",
		JsonName: "options",
		IsArray: true,
		Description: "The options associated with the price layer",
		
	},
	{
		FieldName: "PriceType",
		FieldType: "PriceType",
		JsonName: "priceType",
		Description: "The pricing type of the price layer",
		IsEnum: true,
		EnumValues: []string{"variable", "fixed"},
		DefaultValue: "variable",
	},
	{
		FieldName: "PerUnits",
		FieldType: "int",
		JsonName: "perUnits",
		Description: "The unit size of the variable price",
		DefaultValue: "1",
	},
	{
		FieldName: "RoundingUnits",
		FieldType: "RoundingUnits",
		JsonName: "roundingUnits",
		Description: "How to round the unit sizes if they do not correspond to the unit size",
		IsEnum: true,
		EnumValues: []string{"up", "ratio", "down"},
		DefaultValue: "ratio",
	},
	{
		FieldName: "SaveAsNew",
		FieldType: "bool",
		JsonName: "saveAsNew",
		Description: "Whether to save the price-layer to be used later",
		DefaultValue: "false",
	},
	{
		FieldName: "VariablePriceValues",
		FieldType: "VariablePriceValues",
		JsonName: "values",
		Description: "The values of the variable price",
		IsArray: true,
		IsChildStruct: true,
		Fields: []FieldConfig{
				{
					FieldName: "VariablePriceValue",
					FieldType: "VariablePriceValue",
					JsonName: "value",
					Description: "The value of the variable price",
					IsChildStruct: true,
					Fields: []FieldConfig{
							{
								FieldName: "TextValue",
								FieldType: "string",
								JsonName: "textValue",
								Description: "The text value of the variable price",
								DefaultValue: "",
							},
							{
								FieldName: "FloatValue",
								FieldType: "float64",
								JsonName: "floatValue",
								Description: "The float value of the variable price",
								DefaultValue: "0.0",
							},
							{
								FieldName: "IntValue",
								FieldType: "int",
								JsonName: "intValue",
								Description: "The integer value of the variable price",
								DefaultValue: "0",
							},
							{
								FieldName: "DecimalValue",
								FieldType: "float64",
								JsonName: "decimalValue",
								Description: "The decimal value of the variable price",
								DefaultValue: "0.0",
							},
					},
				},
				{
					FieldName: "Attributes",
					FieldType: "map[string]interface{}",
					JsonName: "attributes",
					Description: "The attributes associated with the variable price",
				},
		},
	},
}
