import type IDtoList from '../../base_classes/dto_list'
import { type JSONData } from '../../base_classes/dto.d';
import { type Pagination } from '../../base_classes/pagination';
import { type AirlineOrder } from '.';


/// ///////////////////////////////////////////////////////////////////////////////////////////////////
/// WARNING! THIS FILE IS AUTOMATICALLY GENERATED, ANY CHANGES WILL BE LOST ON NEXT GENERATION
/// ///////////////////////////////////////////////////////////////////////////////////////////////////

export interface IAirlineOrderList extends IDtoList {

    /// ///////////////////////////////////////
    /// //////// PRIVATE VARIABLES ////////////
    /// ///////////////////////////////////////

    /// ///////////////////////////////////////
    /// ///////// PUBLIC VARIABLES ////////////
    /// ///////////////////////////////////////

    /// ///////////////////////////////////////
    /// ////////////// METHODS ////////////////
    /// ///////////////////////////////////////

    /**
     * Build an instance of type AirlineOrder from a JSON object
     * @param pathVars - The path variables
     * @returns A promise of AirlineOrder[]
     */
    _buildInstance: (data: JSONData) => AirlineOrder

    /**
     * Get all AirlineOrders
     * @param pathVars - The path variables
     * @returns A promise of AirlineOrder[]
     */
    getAll: (pathVars?: string | string[] | Record<string, string>) => Promise<AirlineOrder[]>

    /**
     * Get paginated AirlineOrders
     * @param pathVars - The path variables
     * @param pagination - The pagination object
     * @returns A promise of {
     *      items: AirlineOrder[],
     *      pagination: Pagination,
     *  }
     */
    getPaginated: (pathVars: string | string[], pagination: Pagination) => Promise<{
        items: AirlineOrder[],
        pagination: Pagination,
    }>

    /**
     * Query AirlineOrders
     * @param queries - The filters to query on
     * @returns A promise of AirlineOrder[]
     */
    query: (queries: Query[], pagination?: Pagination) => Promise<{
        items: AirlineOrder[],
        pagination: Pagination,
    }>

    /**
     * Search AirlineOrders
     * @param query - The search query
     * @returns A promise of AirlineOrder[]
     */
    search: (query: string, pagination: Pagination) => Promise<{
        items: AirlineOrder[],
        pagination: Pagination,
    }>
}