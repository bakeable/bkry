import { type JSONData } from '../../base_classes/dto.d'
import type IDto from '../../base_classes/dto.d'
import { type AttributeOptionSet } from '../attribute_option_set'
import { type AttributeOption } from '../attribute_option'

/// ///////////////////////////////////////////////////////////////////////////////////////////////////
/// WARNING! THIS FILE IS AUTOMATICALLY GENERATED, ANY CHANGES WILL BE LOST ON NEXT GENERATION
/// ///////////////////////////////////////////////////////////////////////////////////////////////////


// Types
export type AttributeType = "text" | "key_value" | "number" | "range" | "units" | "optional"
export type AttributeIncrementalPricing = "staggered" | "standard"
export type AttributePriceType = "variable" | "fixed"

// Interfaces
export interface IDefaultOptions {
    // Unique identifier for the option
      id: string
    // The option's key
      key: string
    // The maximum value for the option
      max: number
    // The minimum value for the option
      min: number
    // The option's value
      value: string
}

// Data Transfer Object Interface
export interface IAttributeDto extends IDto {
  /// ///////////////////////////////////////
  /// //////// PRIVATE VARIABLES ////////////
  /// ///////////////////////////////////////
  /**
   * The path to the corresponding API endpoint with variables marked as {?}
   */
  _path: string

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////

    // Whether an attribute is selected by default
    default: boolean

    // The default options for this attribute
    defaultOptions: IDefaultOptions[]

    // A description of the attribute
    description: string

    // Whether the attribute is included
    included: boolean

    // Whether graduated pricing applies
    incrementalPricing: AttributeIncrementalPricing

    // The attribute's key
    key: string

    // The kind of the object
    _kind: string

    // The maximum option ID
    maxOptionId: number

    // The attribute's name
    name: string

    // The attribute's numerical identifier
    nid: number

    // The attribute's option sets
    optionSets: AttributeOptionSet[]

    // Whether the attribute is optional
    optional: boolean

    // All options within the attribute
    options: AttributeOption[]

    // A numerical representation of the order in which the attribute should be displayed
    order: number

    // The attribute's prefix
    prefix: string

    // The associated price types
    priceTypes: AttributePriceType[]

    // The attribute's surcharges
    surcharges: Record<string, any>

    // 
    type: AttributeType

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////

  /**
   * Set the Attribute's properties
   */
  set: (data: JSONData) => void
}
