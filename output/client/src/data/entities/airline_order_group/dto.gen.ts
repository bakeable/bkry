import { type JSONData } from '../../base_classes/dto.d'
import { Dto } from '../../base_classes/dto'
import type { IAirlineOrderGroupDto,  } from './dto.gen.d'

/// ///////////////////////////////////////////////////////////////////////////////////////////////////
/// WARNING! THIS FILE IS AUTOMATICALLY GENERATED, ANY CHANGES WILL BE LOST ON NEXT GENERATION
/// ///////////////////////////////////////////////////////////////////////////////////////////////////


// Types

export class AirlineOrderGroupDto extends Dto implements IAirlineOrderGroupDto {
  /// ///////////////////////////////////////
  /// //////// PRIVATE VARIABLES ////////////
  /// ///////////////////////////////////////
  _path = '/airline_order_group/{id}'
  _reference = '/AirlineOrderGroup/{id}'

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////
    
    afasOrderNumbers = [] as string[]
    
    
    _kind = "AirlineOrderGroup"
    
    
    name = ""
    
    
    orders: airline_order.AirlineOrder[] = []
    
    
    pricingTables: airline_pricing.AirlinePricing[] = []
    
    
    settings = new airline_settings.AirlineSettings()
    

  /// ///////////////////////////////////////
  /// ///////////// METHODS /////////////////
  /// ///////////////////////////////////////

  static FromJSON(data: unknown): AirlineOrderGroupDto {
    // Create a new instance of the class
    const obj = new AirlineOrderGroupDto()
    obj.set(data as JSONData)
    return obj
  }

  static FromJSONArray(data: unknown[]): AirlineOrderGroupDto[] {
    return data.map((item) => AirlineOrderGroupDto.FromJSON(item))
  }

  override set(data: JSONData): void {
    super.set(data)
 
    // Implement variables here
    if (data.afasOrderNumbers !== undefined && data.afasOrderNumbers !== null ) {
      this.afasOrderNumbers = data.afasOrderNumbers as string[] ?? this.afasOrderNumbers
      
    }
    if (data._kind !== undefined && data._kind !== null ) {
      this._kind = data._kind as string ?? this._kind
      
    }
    if (data.name !== undefined && data.name !== null ) {
      this.name = data.name as string ?? this.name
      
    }
    if (data.orders !== undefined && data.orders !== null && Array.isArray(data.orders)) {
      this.orders = airline_order.AirlineOrder.FromJSONArray(data.orders as JSONData[])
    }
    if (data.pricingTables !== undefined && data.pricingTables !== null && Array.isArray(data.pricingTables)) {
      this.pricingTables = airline_pricing.AirlinePricing.FromJSONArray(data.pricingTables as JSONData[])
    }
    if (data.settings !== undefined && data.settings !== null ) {
      if (!this.settings) {
        this.settings = new airline_settings.AirlineSettings()
      }
      this.settings.set(data.settings as JSONData ?? this.settings.toJSON())
    }
  }

}
