import { type JSONData } from '../../base_classes/dto.d'
import { Dto } from '../../base_classes/dto'
import type { IAirlineOrderGroupingDto,  } from './dto.gen.d'

/// ///////////////////////////////////////////////////////////////////////////////////////////////////
/// WARNING! THIS FILE IS AUTOMATICALLY GENERATED, ANY CHANGES WILL BE LOST ON NEXT GENERATION
/// ///////////////////////////////////////////////////////////////////////////////////////////////////


// Types

export class AirlineOrderGroupingDto extends Dto implements IAirlineOrderGroupingDto {
  /// ///////////////////////////////////////
  /// //////// PRIVATE VARIABLES ////////////
  /// ///////////////////////////////////////
  _path = '/airline_order_grouping/{id}'
  _reference = '/AirlineOrderGrouping/{id}'

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////
    
    afasOrderNumbers = [] as string[]
    
    
    finalPrice = 0
    
    
    firstOrderDate = "time.Now()"
    
    
    _kind = "AirlineOrderGrouping"
    
    
    marginAmount = 0
    
    
    marginPercentage = 0
    
    
    name = ""
    
    
    orderDate = "time.Now()"
    
    
    orderGroups: airline_order_group.AirlineOrderGroup[] = []
    
    
    orderIds = [] as string[]
    
    
    originalTotalCosts = 0
    
    
    profitAmount = 0
    
    
    profitPercentage = 0
    
    
    savedCosts = 0
    
    
    sentToAfas = false
    
    
    sentToAfasTimestamp = 0
    
    
    totalCosts = 0
    
    
    units = 0
    

  /// ///////////////////////////////////////
  /// ///////////// METHODS /////////////////
  /// ///////////////////////////////////////

  static FromJSON(data: unknown): AirlineOrderGroupingDto {
    // Create a new instance of the class
    const obj = new AirlineOrderGroupingDto()
    obj.set(data as JSONData)
    return obj
  }

  static FromJSONArray(data: unknown[]): AirlineOrderGroupingDto[] {
    return data.map((item) => AirlineOrderGroupingDto.FromJSON(item))
  }

  override set(data: JSONData): void {
    super.set(data)
 
    // Implement variables here
    if (data.afasOrderNumbers !== undefined && data.afasOrderNumbers !== null ) {
      this.afasOrderNumbers = data.afasOrderNumbers as string[] ?? this.afasOrderNumbers
      
    }
    if (data.finalPrice !== undefined && data.finalPrice !== null ) {
      this.finalPrice = data.finalPrice as number ?? this.finalPrice
      
    }
    if (data.firstOrderDate !== undefined && data.firstOrderDate !== null ) {
      this.firstOrderDate = data.firstOrderDate as string ?? this.firstOrderDate
      
    }
    if (data._kind !== undefined && data._kind !== null ) {
      this._kind = data._kind as string ?? this._kind
      
    }
    if (data.marginAmount !== undefined && data.marginAmount !== null ) {
      this.marginAmount = data.marginAmount as number ?? this.marginAmount
      
    }
    if (data.marginPercentage !== undefined && data.marginPercentage !== null ) {
      this.marginPercentage = data.marginPercentage as number ?? this.marginPercentage
      
    }
    if (data.name !== undefined && data.name !== null ) {
      this.name = data.name as string ?? this.name
      
    }
    if (data.orderDate !== undefined && data.orderDate !== null ) {
      this.orderDate = data.orderDate as string ?? this.orderDate
      
    }
    if (data.orderGroups !== undefined && data.orderGroups !== null && Array.isArray(data.orderGroups)) {
      this.orderGroups = airline_order_group.AirlineOrderGroup.FromJSONArray(data.orderGroups as JSONData[])
    }
    if (data.orderIds !== undefined && data.orderIds !== null ) {
      this.orderIds = data.orderIds as string[] ?? this.orderIds
      
    }
    if (data.originalTotalCosts !== undefined && data.originalTotalCosts !== null ) {
      this.originalTotalCosts = data.originalTotalCosts as number ?? this.originalTotalCosts
      
    }
    if (data.profitAmount !== undefined && data.profitAmount !== null ) {
      this.profitAmount = data.profitAmount as number ?? this.profitAmount
      
    }
    if (data.profitPercentage !== undefined && data.profitPercentage !== null ) {
      this.profitPercentage = data.profitPercentage as number ?? this.profitPercentage
      
    }
    if (data.savedCosts !== undefined && data.savedCosts !== null ) {
      this.savedCosts = data.savedCosts as number ?? this.savedCosts
      
    }
    if (data.sentToAfas !== undefined && data.sentToAfas !== null ) {
      this.sentToAfas = data.sentToAfas as boolean ?? this.sentToAfas
      
    }
    if (data.sentToAfasTimestamp !== undefined && data.sentToAfasTimestamp !== null ) {
      this.sentToAfasTimestamp = data.sentToAfasTimestamp as number ?? this.sentToAfasTimestamp
      
    }
    if (data.totalCosts !== undefined && data.totalCosts !== null ) {
      this.totalCosts = data.totalCosts as number ?? this.totalCosts
      
    }
    if (data.units !== undefined && data.units !== null ) {
      this.units = data.units as number ?? this.units
      
    }
  }

}
