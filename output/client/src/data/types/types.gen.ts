import { type EntityName, type EntityTypeName } from './types.gen.d';

export const entityCollectionNameToEntityName = Object.freeze({
  Author: 'author',
  Category: 'category',
  GameModus: 'game_modus',
  Media: 'media',
  ProductPackage: 'product_package',
  Purchase: 'purchase',
  QuestionBundle: 'question_bundle',
  QuestionContext: 'question_context',
  Tag: 'tag',
  User: 'user',
  CategoryLocalisation: 'category_localisation',
  GameModusLocalisation: 'game_modus_localisation',
  ProductPackageLocalisation: 'product_package_localisation',
  QuestionBundleLocalisation: 'question_bundle_localisation',
  QuestionContextLocalisation: 'question_context_localisation',
  TagLocalisation: 'tag_localisation',
})

export const entityNameToTypeName = Object.freeze({
  author: 'Author' as EntityTypeName,
  category: 'Category' as EntityTypeName,
  game_modus: 'GameModus' as EntityTypeName,
  media: 'Media' as EntityTypeName,
  product_package: 'ProductPackage' as EntityTypeName,
  purchase: 'Purchase' as EntityTypeName,
  question_bundle: 'QuestionBundle' as EntityTypeName,
  question_context: 'QuestionContext' as EntityTypeName,
  tag: 'Tag' as EntityTypeName,
  user: 'User' as EntityTypeName,
  category_localisation: 'CategoryLocalisation' as EntityTypeName,
  game_modus_localisation: 'GameModusLocalisation' as EntityTypeName,
  product_package_localisation: 'ProductPackageLocalisation' as EntityTypeName,
  question_bundle_localisation: 'QuestionBundleLocalisation' as EntityTypeName,
  question_context_localisation: 'QuestionContextLocalisation' as EntityTypeName,
  tag_localisation: 'TagLocalisation' as EntityTypeName,
})

export const entityTypeName: Record<EntityTypeName, EntityTypeName> = Object.freeze({
  Author: 'Author',
  Category: 'Category',
  GameModus: 'GameModus',
  Media: 'Media',
  ProductPackage: 'ProductPackage',
  Purchase: 'Purchase',
  QuestionBundle: 'QuestionBundle',
  QuestionContext: 'QuestionContext',
  Tag: 'Tag',
  User: 'User',
  CategoryLocalisation: 'CategoryLocalisation',
  GameModusLocalisation: 'GameModusLocalisation',
  ProductPackageLocalisation: 'ProductPackageLocalisation',
  QuestionBundleLocalisation: 'QuestionBundleLocalisation',
  QuestionContextLocalisation: 'QuestionContextLocalisation',
  TagLocalisation: 'TagLocalisation',
})