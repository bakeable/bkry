import { type JSONData } from '../../base_classes/dto.d'
import { Dto } from '../../base_classes/dto'
import type { IPrintingOrderSupplierDto, PrintingOrderSupplierDeliveryType,  } from './dto.gen.d'

/// ///////////////////////////////////////////////////////////////////////////////////////////////////
/// WARNING! THIS FILE IS AUTOMATICALLY GENERATED, ANY CHANGES WILL BE LOST ON NEXT GENERATION
/// ///////////////////////////////////////////////////////////////////////////////////////////////////


// Types
export const PrintingOrderSupplierDeliveryTypeValues: Record<string,PrintingOrderSupplierDeliveryType> = Object.freeze({
  EMAIL: 'EMAIL',
})

export class PrintingOrderSupplierDto extends Dto implements IPrintingOrderSupplierDto {
  /// ///////////////////////////////////////
  /// //////// PRIVATE VARIABLES ////////////
  /// ///////////////////////////////////////
  _path = '/printing_order_supplier/{id}'
  _reference = '/PrintingOrderSupplier/{id}'

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////
    
    code = ""
    
    
    contactName = ""
    
    
    deliveryType = PrintingOrderSupplierDeliveryTypeValues.EMAIL
    
    
    email = ""
    
    
    emails = [] as string[]
    
    
    _kind = "'PrintingOrderSupplier'"
    
    
    name = ""
    
    
    skus = [] as string[]
    

  /// ///////////////////////////////////////
  /// ///////////// METHODS /////////////////
  /// ///////////////////////////////////////

  static FromJSON(data: unknown): PrintingOrderSupplierDto {
    // Create a new instance of the class
    const obj = new PrintingOrderSupplierDto()
    obj.set(data as JSONData)
    return obj
  }

  static FromJSONArray(data: unknown[]): PrintingOrderSupplierDto[] {
    return data.map((item) => PrintingOrderSupplierDto.FromJSON(item))
  }

  override set(data: JSONData): void {
    super.set(data)
 
    // Implement variables here
    if (data.code !== undefined && data.code !== null ) {
      this.code = data.code as string ?? this.code
      
    }
    if (data.contactName !== undefined && data.contactName !== null ) {
      this.contactName = data.contactName as string ?? this.contactName
      
    }
    if (data.deliveryType !== undefined && data.deliveryType !== null ) {
        this.deliveryType = PrintingOrderSupplierDeliveryTypeValues[(data?.deliveryType as string)?.toUpperCase() ?? this.deliveryType.toUpperCase()]
    }
    if (data.email !== undefined && data.email !== null ) {
      this.email = data.email as string ?? this.email
      
    }
    if (data.emails !== undefined && data.emails !== null ) {
      this.emails = data.emails as string[] ?? this.emails
      
    }
    if (data._kind !== undefined && data._kind !== null ) {
      this._kind = data._kind as string ?? this._kind
      
    }
    if (data.name !== undefined && data.name !== null ) {
      this.name = data.name as string ?? this.name
      
    }
    if (data.skus !== undefined && data.skus !== null ) {
      this.skus = data.skus as string[] ?? this.skus
      
    }
  }

}
