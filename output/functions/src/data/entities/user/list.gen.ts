import { User } from './entity'
import DtoList from '../../base_classes/dto_list'
import { type JSONData } from '../../base_classes/dto.d'
import { type IUserList } from './list.gen.d'
import { type Pagination, type Query } from '../../base_classes/dto_list.d'


/// ///////////////////////////////////////////////////////////////////////////////////////////////////
/// WARNING! THIS FILE IS AUTOMATICALLY GENERATED, ANY CHANGES WILL BE LOST ON NEXT GENERATION
/// ///////////////////////////////////////////////////////////////////////////////////////////////////


export class UserList 
extends DtoList 
implements IUserList 
{
  /// ///////////////////////////////////////
  /// //////// PRIVATE VARIABLES ////////////
  /// ///////////////////////////////////////
  _path = '/user'
  _kind = 'User'
  _name = 'user'

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////
  list: User[] = []
  queriedList: User[] = []

  /// ///////////////////////////////////////
  /// ////////////// METHODS ////////////////
  /// ///////////////////////////////////////

  _buildInstance(data: JSONData): User {
    return new User([], data)
  }

  override async getAll(
    pathVars?: string | string[] | Record<string, string>
  ): Promise<User[]> {
    return (await super.getAll(pathVars)) as User[]
  }

  override async getPaginated(
    pathVars: string | string[],
    pagination: Pagination
  ): Promise<{
    items: User[],
    pagination: Pagination,
  }> {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    return (await super.getPaginated(pathVars, pagination)) as {
      items: User[],
      pagination: Pagination,
    }
  }

  override async query(queries: Query[], pagination?: Pagination): Promise<User[]> {
    return (await super.query(queries, pagination)) as User[];
  }

  override async search(query: string, pagination?: Pagination): Promise<User[]> {
    return (await super.search(query, pagination)) as User[];
  }
}
