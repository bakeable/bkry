import { type JSONData } from '../../base_classes/dto.d'
import { Dto } from '../../base_classes/dto'
import type { IPrintingOrderItemDto,  } from './dto.gen.d'

/// ///////////////////////////////////////////////////////////////////////////////////////////////////
/// WARNING! THIS FILE IS AUTOMATICALLY GENERATED, ANY CHANGES WILL BE LOST ON NEXT GENERATION
/// ///////////////////////////////////////////////////////////////////////////////////////////////////


// Types

export class PrintingOrderItemDto extends Dto implements IPrintingOrderItemDto {
  /// ///////////////////////////////////////
  /// //////// PRIVATE VARIABLES ////////////
  /// ///////////////////////////////////////
  _path = '/printing_order_item/{id}'
  _reference = '/PrintingOrderItem/{id}'

  /// ///////////////////////////////////////
  /// ///////// PUBLIC VARIABLES ////////////
  /// ///////////////////////////////////////
    
    _kind = "PrintingOrderItem"
    
    
    sku = ""
    
    
    supplierContactName = ""
    
    
    supplierId = ""
    
    
    supplierName = ""
    

  /// ///////////////////////////////////////
  /// ///////////// METHODS /////////////////
  /// ///////////////////////////////////////

  static FromJSON(data: unknown): PrintingOrderItemDto {
    // Create a new instance of the class
    const obj = new PrintingOrderItemDto()
    obj.set(data as JSONData)
    return obj
  }

  static FromJSONArray(data: unknown[]): PrintingOrderItemDto[] {
    return data.map((item) => PrintingOrderItemDto.FromJSON(item))
  }

  override set(data: JSONData): void {
    super.set(data)
 
    // Implement variables here
    if (data._kind !== undefined && data._kind !== null ) {
      this._kind = data._kind as string ?? this._kind
      
    }
    if (data.sku !== undefined && data.sku !== null ) {
      this.sku = data.sku as string ?? this.sku
      
    }
    if (data.supplierContactName !== undefined && data.supplierContactName !== null ) {
      this.supplierContactName = data.supplierContactName as string ?? this.supplierContactName
      
    }
    if (data.supplierId !== undefined && data.supplierId !== null ) {
      this.supplierId = data.supplierId as string ?? this.supplierId
      
    }
    if (data.supplierName !== undefined && data.supplierName !== null ) {
      this.supplierName = data.supplierName as string ?? this.supplierName
      
    }
  }

}
