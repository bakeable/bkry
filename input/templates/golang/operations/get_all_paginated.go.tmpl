package {{.EntityName}}_operations

import (
	{{.EntityName}} "github.com/bakeable/bkry/internal/server/models/entities/{{.PackagePath}}"
	repo "github.com/bakeable/bkry/internal/server/database/repository"
	"github.com/bakeable/bkry/third_party/gcloud/datastore"	
	
)

//// THIS FILE IS AUTOGENERATED. DO NOT EDIT

func GetAllPaginated(repository repo.IRepository, {{if gt (len .ParentParams) 0}}{{.ParentParams}}, {{end}}pagination datastore.Pagination) ([]{{.EntityName}}.{{.TypeName}}, datastore.Pagination) {
	// Get {{.TypeNamePlural}}
	entities, pagination, err := repository.GetAll{{.TypeNamePlural}}Paginated({{if gt (len .ParentVars) 0}}{{.ParentVars}}, {{end}}pagination)
	if err != nil {
		panic(err)
	}

	// Process {{.TypeName}} entities
	entities = afterGetAllPaginated({{if gt (len .ParentVars) 0}}{{.ParentVars}}, {{end}}entities, pagination.PageSize, pagination.PageNumber, pagination.OrderBy, pagination.Ascending)

	// Return {{.TypeNamePlural}}
	return entities, pagination
}