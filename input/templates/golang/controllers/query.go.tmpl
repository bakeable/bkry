package {{.EntityName}}_controllers

import (
	{{.EntityName}}_operations "github.com/bakeable/bkry/internal/server/transport/operations/{{.EntityName}}"
	"github.com/bakeable/bkry/internal/server/database"
	"encoding/json"
	"fmt"
	"net/http"

	"github.com/gin-gonic/gin"
)

//// THIS FILE IS AUTOGENERATED. DO NOT EDIT
//// IF YOU WISH TO EDIT THIS CONTROLLER, REMOVE THE .gen.go EXTENSION
//// THIS WAY, IT WON'T BE OVERWRITTEN AND THERE WON'T BE A CONTROLLER GENERATED

func Query(c *gin.Context) {
	fmt.Println(c.Query("pagination"), c.Query("queries"))

	if c.DefaultQuery("queries", "") == "" {
		// Fallback on GetAllPaginated if no queries are provided
		GetAllPaginated(c)
		return
	} else if c.DefaultQuery("pagination", "") == "" {
		GetAll(c)
		return
	}

	// Unmarshal queries and pagination
	var queries []database.Query
	err := json.Unmarshal([]byte(c.Query("queries")), &queries)
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	var pagination database.Pagination
	err = json.Unmarshal([]byte(c.Query("pagination")), &pagination)
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	
{{range .ParentsCamelCase}}
	// Get {{.}} ID from URL
	{{.}}ID := c.Param("{{.}}ID")
{{end}}
	
	// Get {{.EntityName}}s from queries
	entities, pagination := {{.EntityName}}_operations.Query(getRepository(){{if gt (len .ParentVars) 0}}, {{.ParentVars}}{{end}}, queries, pagination)

	// Return {{.EntityName}}
	c.JSON(http.StatusOK, gin.H{"items": entities, "page_info": pagination })
}