{{- range .Entities}}
import { {{.TypeName}}, {{.TypeName}}Transporter, {{.TypeName}}Handler, {{.TypeName}}Builder, create{{.TypeName}}Store } from './{{.EntityName}}'
{{- end}}
import {
  type EntityName,
  type EntityTypeName,
} from '../types/types.gen.d';

const entityCollectionNameToEntityName: Record<string, EntityName> = Object.freeze({
{{- range .Entities}}
  {{.CollectionName}}: '{{.EntityName}}',
{{- end}}
})

const entityNameToTypeName: Record<EntityName, EntityTypeName> = Object.freeze({
{{- range .Entities}}
  {{.EntityName}}: '{{.TypeName}}',
{{- end}}
})

const entityTypeName: Record<EntityTypeName, EntityTypeName> = Object.freeze({
{{- range .Entities}}
  {{.TypeName}}: '{{.TypeName}}',
{{- end}}
})

export {
  entityCollectionNameToEntityName,
  entityNameToTypeName,
  entityTypeName,
{{- range .Entities}}
  type {{.TypeName}},
  {{.TypeName}}Transporter,
  {{.TypeName}}Handler,
  {{.TypeName}}Builder,
  create{{.TypeName}}Store,
{{- end}}
}
